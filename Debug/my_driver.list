
my_driver.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000c84  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000d44  08000d44  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000d44  08000d44  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08000d44  08000d44  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000d44  08000d44  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000d44  08000d44  00010d44  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000d48  08000d48  00010d48  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08000d4c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000a0  20000064  08000db0  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000104  08000db0  00020104  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_line   000010c5  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_info   00001eb5  00000000  00000000  00021151  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_abbrev 000004c6  00000000  00000000  00023006  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_aranges 000000d0  00000000  00000000  000234d0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_str    000078a4  00000000  00000000  000235a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 000000b8  00000000  00000000  0002ae48  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_macro  00001d09  00000000  00000000  0002af00  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002cc09  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000328  00000000  00000000  0002cc84  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000064 	.word	0x20000064
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08000d2c 	.word	0x08000d2c

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000068 	.word	0x20000068
 8000104:	08000d2c 	.word	0x08000d2c

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000118:	480d      	ldr	r0, [pc, #52]	; (8000150 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800011a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 800011c:	e000      	b.n	8000120 <Reset_Handler+0x8>
 800011e:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000120:	480c      	ldr	r0, [pc, #48]	; (8000154 <LoopForever+0x6>)
  ldr r1, =_edata
 8000122:	490d      	ldr	r1, [pc, #52]	; (8000158 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000124:	4a0d      	ldr	r2, [pc, #52]	; (800015c <LoopForever+0xe>)
  movs r3, #0
 8000126:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000128:	e002      	b.n	8000130 <LoopCopyDataInit>

0800012a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800012a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800012c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800012e:	3304      	adds	r3, #4

08000130 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000130:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000132:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000134:	d3f9      	bcc.n	800012a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000136:	4a0a      	ldr	r2, [pc, #40]	; (8000160 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000138:	4c0a      	ldr	r4, [pc, #40]	; (8000164 <LoopForever+0x16>)
  movs r3, #0
 800013a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800013c:	e001      	b.n	8000142 <LoopFillZerobss>

0800013e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800013e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000140:	3204      	adds	r2, #4

08000142 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000142:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000144:	d3fb      	bcc.n	800013e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000146:	f000 fd39 	bl	8000bbc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800014a:	f000 fc13 	bl	8000974 <main>

0800014e <LoopForever>:

LoopForever:
    b LoopForever
 800014e:	e7fe      	b.n	800014e <LoopForever>
  ldr   r0, =_estack
 8000150:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 8000154:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000158:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 800015c:	08000d4c 	.word	0x08000d4c
  ldr r2, =_sbss
 8000160:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000164:	20000104 	.word	0x20000104

08000168 <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000168:	e7fe      	b.n	8000168 <ADC_COMP_IRQHandler>
	...

0800016c <USART_init>:

#include "USART_api.h"


void USART_init(USART_handle *pUSART)
{
 800016c:	b580      	push	{r7, lr}
 800016e:	b086      	sub	sp, #24
 8000170:	af00      	add	r7, sp, #0
 8000172:	6078      	str	r0, [r7, #4]

	//enable clock for USART1
	RCC_reg *pRCC = RCC;
 8000174:	4b58      	ldr	r3, [pc, #352]	; (80002d8 <USART_init+0x16c>)
 8000176:	617b      	str	r3, [r7, #20]
	pRCC->RCC_APB2ENR |= 1<<14;
 8000178:	697b      	ldr	r3, [r7, #20]
 800017a:	699b      	ldr	r3, [r3, #24]
 800017c:	2280      	movs	r2, #128	; 0x80
 800017e:	01d2      	lsls	r2, r2, #7
 8000180:	431a      	orrs	r2, r3
 8000182:	697b      	ldr	r3, [r7, #20]
 8000184:	619a      	str	r2, [r3, #24]

	GPIO_handle *pGPIO_TX,*pGPIO_RX ;

	pGPIO_TX = (GPIO_handle*)(malloc(sizeof(GPIO_handle)));
 8000186:	2010      	movs	r0, #16
 8000188:	f000 fd3c 	bl	8000c04 <malloc>
 800018c:	0003      	movs	r3, r0
 800018e:	613b      	str	r3, [r7, #16]
	memset(pGPIO_TX,0,sizeof(GPIO_handle));
 8000190:	693b      	ldr	r3, [r7, #16]
 8000192:	2210      	movs	r2, #16
 8000194:	2100      	movs	r1, #0
 8000196:	0018      	movs	r0, r3
 8000198:	f000 fd3e 	bl	8000c18 <memset>
	pGPIO_TX->GPIO_addr =  GPIOA;
 800019c:	693b      	ldr	r3, [r7, #16]
 800019e:	2290      	movs	r2, #144	; 0x90
 80001a0:	05d2      	lsls	r2, r2, #23
 80001a2:	601a      	str	r2, [r3, #0]
	pGPIO_TX->GPIO_pin_config.GPIO_pin_number = 9;
 80001a4:	693b      	ldr	r3, [r7, #16]
 80001a6:	2209      	movs	r2, #9
 80001a8:	711a      	strb	r2, [r3, #4]
	pGPIO_TX->GPIO_pin_config.GPIO_pin_mode = GPIO_ALT_FUNCTION;
 80001aa:	693b      	ldr	r3, [r7, #16]
 80001ac:	2202      	movs	r2, #2
 80001ae:	715a      	strb	r2, [r3, #5]
	pGPIO_TX->GPIO_pin_config.GPIO_pin_ALT_function = GPIO_AF1;
 80001b0:	693b      	ldr	r3, [r7, #16]
 80001b2:	2201      	movs	r2, #1
 80001b4:	725a      	strb	r2, [r3, #9]
	GPIO_init(pGPIO_TX);
 80001b6:	693b      	ldr	r3, [r7, #16]
 80001b8:	0018      	movs	r0, r3
 80001ba:	f000 f991 	bl	80004e0 <GPIO_init>


	pGPIO_RX = (GPIO_handle*)(malloc(sizeof(GPIO_handle)));
 80001be:	2010      	movs	r0, #16
 80001c0:	f000 fd20 	bl	8000c04 <malloc>
 80001c4:	0003      	movs	r3, r0
 80001c6:	60fb      	str	r3, [r7, #12]
	memset(pGPIO_RX,0,sizeof(GPIO_handle));
 80001c8:	68fb      	ldr	r3, [r7, #12]
 80001ca:	2210      	movs	r2, #16
 80001cc:	2100      	movs	r1, #0
 80001ce:	0018      	movs	r0, r3
 80001d0:	f000 fd22 	bl	8000c18 <memset>
	pGPIO_RX->GPIO_addr  =  GPIOA;
 80001d4:	68fb      	ldr	r3, [r7, #12]
 80001d6:	2290      	movs	r2, #144	; 0x90
 80001d8:	05d2      	lsls	r2, r2, #23
 80001da:	601a      	str	r2, [r3, #0]
	pGPIO_RX->GPIO_pin_config.GPIO_pin_number = 10;
 80001dc:	68fb      	ldr	r3, [r7, #12]
 80001de:	220a      	movs	r2, #10
 80001e0:	711a      	strb	r2, [r3, #4]
	pGPIO_RX->GPIO_pin_config.GPIO_pin_mode = GPIO_ALT_FUNCTION;
 80001e2:	68fb      	ldr	r3, [r7, #12]
 80001e4:	2202      	movs	r2, #2
 80001e6:	715a      	strb	r2, [r3, #5]
	pGPIO_RX->GPIO_pin_config.GPIO_pin_ALT_function = GPIO_AF1;
 80001e8:	68fb      	ldr	r3, [r7, #12]
 80001ea:	2201      	movs	r2, #1
 80001ec:	725a      	strb	r2, [r3, #9]

	GPIO_init(pGPIO_RX);
 80001ee:	68fb      	ldr	r3, [r7, #12]
 80001f0:	0018      	movs	r0, r3
 80001f2:	f000 f975 	bl	80004e0 <GPIO_init>

	//disable USART
	pUSART->base_addr->USART_CR1 &= ~(1<<0);
 80001f6:	687b      	ldr	r3, [r7, #4]
 80001f8:	681b      	ldr	r3, [r3, #0]
 80001fa:	681a      	ldr	r2, [r3, #0]
 80001fc:	687b      	ldr	r3, [r7, #4]
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	2101      	movs	r1, #1
 8000202:	438a      	bics	r2, r1
 8000204:	601a      	str	r2, [r3, #0]

	//word length M[28:12]
	pUSART->base_addr->USART_CR1 &= ~(1<<12 | 1<<28);
 8000206:	687b      	ldr	r3, [r7, #4]
 8000208:	681b      	ldr	r3, [r3, #0]
 800020a:	681a      	ldr	r2, [r3, #0]
 800020c:	687b      	ldr	r3, [r7, #4]
 800020e:	681b      	ldr	r3, [r3, #0]
 8000210:	4932      	ldr	r1, [pc, #200]	; (80002dc <USART_init+0x170>)
 8000212:	400a      	ands	r2, r1
 8000214:	601a      	str	r2, [r3, #0]
	pUSART->base_addr->USART_CR1 |= pUSART->config.USART_word_len<<12;
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	681b      	ldr	r3, [r3, #0]
 800021a:	681a      	ldr	r2, [r3, #0]
 800021c:	687b      	ldr	r3, [r7, #4]
 800021e:	7b9b      	ldrb	r3, [r3, #14]
 8000220:	031b      	lsls	r3, r3, #12
 8000222:	0019      	movs	r1, r3
 8000224:	687b      	ldr	r3, [r7, #4]
 8000226:	681b      	ldr	r3, [r3, #0]
 8000228:	430a      	orrs	r2, r1
 800022a:	601a      	str	r2, [r3, #0]


	//parity bit
	pUSART->base_addr->USART_CR1 &= ~(1<<10);
 800022c:	687b      	ldr	r3, [r7, #4]
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	681a      	ldr	r2, [r3, #0]
 8000232:	687b      	ldr	r3, [r7, #4]
 8000234:	681b      	ldr	r3, [r3, #0]
 8000236:	492a      	ldr	r1, [pc, #168]	; (80002e0 <USART_init+0x174>)
 8000238:	400a      	ands	r2, r1
 800023a:	601a      	str	r2, [r3, #0]
	pUSART->base_addr->USART_CR1 |= pUSART->config.USART_parity<<10;
 800023c:	687b      	ldr	r3, [r7, #4]
 800023e:	681b      	ldr	r3, [r3, #0]
 8000240:	681a      	ldr	r2, [r3, #0]
 8000242:	687b      	ldr	r3, [r7, #4]
 8000244:	7b5b      	ldrb	r3, [r3, #13]
 8000246:	029b      	lsls	r3, r3, #10
 8000248:	0019      	movs	r1, r3
 800024a:	687b      	ldr	r3, [r7, #4]
 800024c:	681b      	ldr	r3, [r3, #0]
 800024e:	430a      	orrs	r2, r1
 8000250:	601a      	str	r2, [r3, #0]


	//stop bit
	pUSART->base_addr->USART_CR2 &= ~(1<<13 | 1<<12);
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	681b      	ldr	r3, [r3, #0]
 8000256:	685a      	ldr	r2, [r3, #4]
 8000258:	687b      	ldr	r3, [r7, #4]
 800025a:	681b      	ldr	r3, [r3, #0]
 800025c:	4921      	ldr	r1, [pc, #132]	; (80002e4 <USART_init+0x178>)
 800025e:	400a      	ands	r2, r1
 8000260:	605a      	str	r2, [r3, #4]
	pUSART->base_addr->USART_CR2 |= pUSART->config.USART_stop<<12;
 8000262:	687b      	ldr	r3, [r7, #4]
 8000264:	681b      	ldr	r3, [r3, #0]
 8000266:	685a      	ldr	r2, [r3, #4]
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	7b1b      	ldrb	r3, [r3, #12]
 800026c:	031b      	lsls	r3, r3, #12
 800026e:	0019      	movs	r1, r3
 8000270:	687b      	ldr	r3, [r7, #4]
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	430a      	orrs	r2, r1
 8000276:	605a      	str	r2, [r3, #4]

	//over sampling
	pUSART->base_addr->USART_CR1 &= ~(1<<15);
 8000278:	687b      	ldr	r3, [r7, #4]
 800027a:	681b      	ldr	r3, [r3, #0]
 800027c:	681a      	ldr	r2, [r3, #0]
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	681b      	ldr	r3, [r3, #0]
 8000282:	4919      	ldr	r1, [pc, #100]	; (80002e8 <USART_init+0x17c>)
 8000284:	400a      	ands	r2, r1
 8000286:	601a      	str	r2, [r3, #0]
	pUSART->base_addr->USART_CR1 |= pUSART->config.USART_oversampling<<15;
 8000288:	687b      	ldr	r3, [r7, #4]
 800028a:	681b      	ldr	r3, [r3, #0]
 800028c:	681a      	ldr	r2, [r3, #0]
 800028e:	687b      	ldr	r3, [r7, #4]
 8000290:	7bdb      	ldrb	r3, [r3, #15]
 8000292:	03db      	lsls	r3, r3, #15
 8000294:	0019      	movs	r1, r3
 8000296:	687b      	ldr	r3, [r7, #4]
 8000298:	681b      	ldr	r3, [r3, #0]
 800029a:	430a      	orrs	r2, r1
 800029c:	601a      	str	r2, [r3, #0]

	//baud rate
	pUSART->base_addr->USART_BRR = (uint16_t)pUSART->config.USART_baudrate;
 800029e:	687b      	ldr	r3, [r7, #4]
 80002a0:	689b      	ldr	r3, [r3, #8]
 80002a2:	b29a      	uxth	r2, r3
 80002a4:	687b      	ldr	r3, [r7, #4]
 80002a6:	681b      	ldr	r3, [r3, #0]
 80002a8:	60da      	str	r2, [r3, #12]

	//enable USART
	pUSART->base_addr->USART_CR1 |= 1<<0;
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	681b      	ldr	r3, [r3, #0]
 80002ae:	681a      	ldr	r2, [r3, #0]
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	681b      	ldr	r3, [r3, #0]
 80002b4:	2101      	movs	r1, #1
 80002b6:	430a      	orrs	r2, r1
 80002b8:	601a      	str	r2, [r3, #0]

	//USART mode
	pUSART->base_addr->USART_CR1 |= pUSART->config.USART_mode;
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	681a      	ldr	r2, [r3, #0]
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	791b      	ldrb	r3, [r3, #4]
 80002c4:	0019      	movs	r1, r3
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	681b      	ldr	r3, [r3, #0]
 80002ca:	430a      	orrs	r2, r1
 80002cc:	601a      	str	r2, [r3, #0]




}
 80002ce:	46c0      	nop			; (mov r8, r8)
 80002d0:	46bd      	mov	sp, r7
 80002d2:	b006      	add	sp, #24
 80002d4:	bd80      	pop	{r7, pc}
 80002d6:	46c0      	nop			; (mov r8, r8)
 80002d8:	40021000 	.word	0x40021000
 80002dc:	efffefff 	.word	0xefffefff
 80002e0:	fffffbff 	.word	0xfffffbff
 80002e4:	ffffcfff 	.word	0xffffcfff
 80002e8:	ffff7fff 	.word	0xffff7fff

080002ec <USART_send>:

void USART_send(char *msg, USART_handle *pUSART)
{
 80002ec:	b580      	push	{r7, lr}
 80002ee:	b082      	sub	sp, #8
 80002f0:	af00      	add	r7, sp, #0
 80002f2:	6078      	str	r0, [r7, #4]
 80002f4:	6039      	str	r1, [r7, #0]

	while(*msg)
 80002f6:	e01c      	b.n	8000332 <USART_send+0x46>
	{
		if(pUSART->base_addr->USART_ISR & (1<<7))
 80002f8:	683b      	ldr	r3, [r7, #0]
 80002fa:	681b      	ldr	r3, [r3, #0]
 80002fc:	69db      	ldr	r3, [r3, #28]
 80002fe:	2280      	movs	r2, #128	; 0x80
 8000300:	4013      	ands	r3, r2
 8000302:	d007      	beq.n	8000314 <USART_send+0x28>
		{
			pUSART->base_addr->USART_TDR = *msg;
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	781a      	ldrb	r2, [r3, #0]
 8000308:	683b      	ldr	r3, [r7, #0]
 800030a:	681b      	ldr	r3, [r3, #0]
 800030c:	629a      	str	r2, [r3, #40]	; 0x28
			msg++;
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	3301      	adds	r3, #1
 8000312:	607b      	str	r3, [r7, #4]
		}

		while(!(pUSART->base_addr->USART_ISR & (1<<6)));
 8000314:	46c0      	nop			; (mov r8, r8)
 8000316:	683b      	ldr	r3, [r7, #0]
 8000318:	681b      	ldr	r3, [r3, #0]
 800031a:	69db      	ldr	r3, [r3, #28]
 800031c:	2240      	movs	r2, #64	; 0x40
 800031e:	4013      	ands	r3, r2
 8000320:	d0f9      	beq.n	8000316 <USART_send+0x2a>
		pUSART->base_addr->USART_ICR |= 1<<6;
 8000322:	683b      	ldr	r3, [r7, #0]
 8000324:	681b      	ldr	r3, [r3, #0]
 8000326:	6a1a      	ldr	r2, [r3, #32]
 8000328:	683b      	ldr	r3, [r7, #0]
 800032a:	681b      	ldr	r3, [r3, #0]
 800032c:	2140      	movs	r1, #64	; 0x40
 800032e:	430a      	orrs	r2, r1
 8000330:	621a      	str	r2, [r3, #32]
	while(*msg)
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	781b      	ldrb	r3, [r3, #0]
 8000336:	2b00      	cmp	r3, #0
 8000338:	d1de      	bne.n	80002f8 <USART_send+0xc>

	}
}
 800033a:	46c0      	nop			; (mov r8, r8)
 800033c:	46bd      	mov	sp, r7
 800033e:	b002      	add	sp, #8
 8000340:	bd80      	pop	{r7, pc}
	...

08000344 <USART_IRQ_config>:

void USART_IRQ_config(USART_handle *pUSART)
{
 8000344:	b580      	push	{r7, lr}
 8000346:	b082      	sub	sp, #8
 8000348:	af00      	add	r7, sp, #0
 800034a:	6078      	str	r0, [r7, #4]
	//enable RXNEIE
	pUSART->base_addr->USART_CR1 |= 1<<5;
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	681b      	ldr	r3, [r3, #0]
 8000350:	681a      	ldr	r2, [r3, #0]
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	681b      	ldr	r3, [r3, #0]
 8000356:	2120      	movs	r1, #32
 8000358:	430a      	orrs	r2, r1
 800035a:	601a      	str	r2, [r3, #0]

	//enable USART interrupt line
	*(NVIC_ISER) |= 1<<pUSART->config.USART_IRQ_number;
 800035c:	4b07      	ldr	r3, [pc, #28]	; (800037c <USART_IRQ_config+0x38>)
 800035e:	681a      	ldr	r2, [r3, #0]
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	7c5b      	ldrb	r3, [r3, #17]
 8000364:	0019      	movs	r1, r3
 8000366:	2301      	movs	r3, #1
 8000368:	408b      	lsls	r3, r1
 800036a:	0019      	movs	r1, r3
 800036c:	4b03      	ldr	r3, [pc, #12]	; (800037c <USART_IRQ_config+0x38>)
 800036e:	430a      	orrs	r2, r1
 8000370:	601a      	str	r2, [r3, #0]

}
 8000372:	46c0      	nop			; (mov r8, r8)
 8000374:	46bd      	mov	sp, r7
 8000376:	b002      	add	sp, #8
 8000378:	bd80      	pop	{r7, pc}
 800037a:	46c0      	nop			; (mov r8, r8)
 800037c:	e000e100 	.word	0xe000e100

08000380 <GPIO_clk_control>:
#include"gpio_api.h"


//enable or disable clock
void GPIO_clk_control(GPIO_handle *pGPIO, uint8_t mode)
{
 8000380:	b580      	push	{r7, lr}
 8000382:	b084      	sub	sp, #16
 8000384:	af00      	add	r7, sp, #0
 8000386:	6078      	str	r0, [r7, #4]
 8000388:	000a      	movs	r2, r1
 800038a:	1cfb      	adds	r3, r7, #3
 800038c:	701a      	strb	r2, [r3, #0]
	RCC_reg *pRCC = RCC;
 800038e:	4b4e      	ldr	r3, [pc, #312]	; (80004c8 <GPIO_clk_control+0x148>)
 8000390:	60fb      	str	r3, [r7, #12]

	if(mode > 0)
 8000392:	1cfb      	adds	r3, r7, #3
 8000394:	781b      	ldrb	r3, [r3, #0]
 8000396:	2b00      	cmp	r3, #0
 8000398:	d049      	beq.n	800042e <GPIO_clk_control+0xae>
	{
		if(pGPIO->GPIO_addr == GPIOA)
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	681a      	ldr	r2, [r3, #0]
 800039e:	2390      	movs	r3, #144	; 0x90
 80003a0:	05db      	lsls	r3, r3, #23
 80003a2:	429a      	cmp	r2, r3
 80003a4:	d106      	bne.n	80003b4 <GPIO_clk_control+0x34>
			pRCC->RCC_AHBENR |= 1<<17;
 80003a6:	68fb      	ldr	r3, [r7, #12]
 80003a8:	695b      	ldr	r3, [r3, #20]
 80003aa:	2280      	movs	r2, #128	; 0x80
 80003ac:	0292      	lsls	r2, r2, #10
 80003ae:	431a      	orrs	r2, r3
 80003b0:	68fb      	ldr	r3, [r7, #12]
 80003b2:	615a      	str	r2, [r3, #20]

		if(pGPIO->GPIO_addr  == GPIOB)
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	681b      	ldr	r3, [r3, #0]
 80003b8:	4a44      	ldr	r2, [pc, #272]	; (80004cc <GPIO_clk_control+0x14c>)
 80003ba:	4293      	cmp	r3, r2
 80003bc:	d106      	bne.n	80003cc <GPIO_clk_control+0x4c>
					pRCC->RCC_AHBENR |= 1<<18;
 80003be:	68fb      	ldr	r3, [r7, #12]
 80003c0:	695b      	ldr	r3, [r3, #20]
 80003c2:	2280      	movs	r2, #128	; 0x80
 80003c4:	02d2      	lsls	r2, r2, #11
 80003c6:	431a      	orrs	r2, r3
 80003c8:	68fb      	ldr	r3, [r7, #12]
 80003ca:	615a      	str	r2, [r3, #20]

		if(pGPIO->GPIO_addr  == GPIOC)
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	681b      	ldr	r3, [r3, #0]
 80003d0:	4a3f      	ldr	r2, [pc, #252]	; (80004d0 <GPIO_clk_control+0x150>)
 80003d2:	4293      	cmp	r3, r2
 80003d4:	d106      	bne.n	80003e4 <GPIO_clk_control+0x64>
					pRCC->RCC_AHBENR |= 1<<19;
 80003d6:	68fb      	ldr	r3, [r7, #12]
 80003d8:	695b      	ldr	r3, [r3, #20]
 80003da:	2280      	movs	r2, #128	; 0x80
 80003dc:	0312      	lsls	r2, r2, #12
 80003de:	431a      	orrs	r2, r3
 80003e0:	68fb      	ldr	r3, [r7, #12]
 80003e2:	615a      	str	r2, [r3, #20]

		if(pGPIO->GPIO_addr  == GPIOD)
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	681b      	ldr	r3, [r3, #0]
 80003e8:	4a3a      	ldr	r2, [pc, #232]	; (80004d4 <GPIO_clk_control+0x154>)
 80003ea:	4293      	cmp	r3, r2
 80003ec:	d106      	bne.n	80003fc <GPIO_clk_control+0x7c>
					pRCC->RCC_AHBENR |= 1<<20;
 80003ee:	68fb      	ldr	r3, [r7, #12]
 80003f0:	695b      	ldr	r3, [r3, #20]
 80003f2:	2280      	movs	r2, #128	; 0x80
 80003f4:	0352      	lsls	r2, r2, #13
 80003f6:	431a      	orrs	r2, r3
 80003f8:	68fb      	ldr	r3, [r7, #12]
 80003fa:	615a      	str	r2, [r3, #20]

		if(pGPIO->GPIO_addr  == GPIOE)
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	681b      	ldr	r3, [r3, #0]
 8000400:	4a35      	ldr	r2, [pc, #212]	; (80004d8 <GPIO_clk_control+0x158>)
 8000402:	4293      	cmp	r3, r2
 8000404:	d106      	bne.n	8000414 <GPIO_clk_control+0x94>
					pRCC->RCC_AHBENR |= 1<<21;
 8000406:	68fb      	ldr	r3, [r7, #12]
 8000408:	695b      	ldr	r3, [r3, #20]
 800040a:	2280      	movs	r2, #128	; 0x80
 800040c:	0392      	lsls	r2, r2, #14
 800040e:	431a      	orrs	r2, r3
 8000410:	68fb      	ldr	r3, [r7, #12]
 8000412:	615a      	str	r2, [r3, #20]

		if(pGPIO->GPIO_addr  == GPIOF)
 8000414:	687b      	ldr	r3, [r7, #4]
 8000416:	681b      	ldr	r3, [r3, #0]
 8000418:	4a30      	ldr	r2, [pc, #192]	; (80004dc <GPIO_clk_control+0x15c>)
 800041a:	4293      	cmp	r3, r2
 800041c:	d150      	bne.n	80004c0 <GPIO_clk_control+0x140>
					pRCC->RCC_AHBENR |= 1<<22;
 800041e:	68fb      	ldr	r3, [r7, #12]
 8000420:	695b      	ldr	r3, [r3, #20]
 8000422:	2280      	movs	r2, #128	; 0x80
 8000424:	03d2      	lsls	r2, r2, #15
 8000426:	431a      	orrs	r2, r3
 8000428:	68fb      	ldr	r3, [r7, #12]
 800042a:	615a      	str	r2, [r3, #20]
					pRCC->RCC_AHBRSTR |= 1<<21;

		if(pGPIO->GPIO_addr  == GPIOF)
					pRCC->RCC_AHBRSTR |= 1<<22;
	}
}
 800042c:	e048      	b.n	80004c0 <GPIO_clk_control+0x140>
		if(pGPIO->GPIO_addr  == GPIOA)
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	681a      	ldr	r2, [r3, #0]
 8000432:	2390      	movs	r3, #144	; 0x90
 8000434:	05db      	lsls	r3, r3, #23
 8000436:	429a      	cmp	r2, r3
 8000438:	d106      	bne.n	8000448 <GPIO_clk_control+0xc8>
					pRCC->RCC_AHBRSTR |= 1<<17;
 800043a:	68fb      	ldr	r3, [r7, #12]
 800043c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800043e:	2280      	movs	r2, #128	; 0x80
 8000440:	0292      	lsls	r2, r2, #10
 8000442:	431a      	orrs	r2, r3
 8000444:	68fb      	ldr	r3, [r7, #12]
 8000446:	629a      	str	r2, [r3, #40]	; 0x28
		if(pGPIO->GPIO_addr  == GPIOB)
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	681b      	ldr	r3, [r3, #0]
 800044c:	4a1f      	ldr	r2, [pc, #124]	; (80004cc <GPIO_clk_control+0x14c>)
 800044e:	4293      	cmp	r3, r2
 8000450:	d106      	bne.n	8000460 <GPIO_clk_control+0xe0>
					pRCC->RCC_AHBRSTR |= 1<<18;
 8000452:	68fb      	ldr	r3, [r7, #12]
 8000454:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000456:	2280      	movs	r2, #128	; 0x80
 8000458:	02d2      	lsls	r2, r2, #11
 800045a:	431a      	orrs	r2, r3
 800045c:	68fb      	ldr	r3, [r7, #12]
 800045e:	629a      	str	r2, [r3, #40]	; 0x28
		if(pGPIO->GPIO_addr  == GPIOC)
 8000460:	687b      	ldr	r3, [r7, #4]
 8000462:	681b      	ldr	r3, [r3, #0]
 8000464:	4a1a      	ldr	r2, [pc, #104]	; (80004d0 <GPIO_clk_control+0x150>)
 8000466:	4293      	cmp	r3, r2
 8000468:	d106      	bne.n	8000478 <GPIO_clk_control+0xf8>
					pRCC->RCC_AHBRSTR |= 1<<19;
 800046a:	68fb      	ldr	r3, [r7, #12]
 800046c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800046e:	2280      	movs	r2, #128	; 0x80
 8000470:	0312      	lsls	r2, r2, #12
 8000472:	431a      	orrs	r2, r3
 8000474:	68fb      	ldr	r3, [r7, #12]
 8000476:	629a      	str	r2, [r3, #40]	; 0x28
		if(pGPIO->GPIO_addr  == GPIOD)
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	4a15      	ldr	r2, [pc, #84]	; (80004d4 <GPIO_clk_control+0x154>)
 800047e:	4293      	cmp	r3, r2
 8000480:	d106      	bne.n	8000490 <GPIO_clk_control+0x110>
					pRCC->RCC_AHBRSTR |= 1<<20;
 8000482:	68fb      	ldr	r3, [r7, #12]
 8000484:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000486:	2280      	movs	r2, #128	; 0x80
 8000488:	0352      	lsls	r2, r2, #13
 800048a:	431a      	orrs	r2, r3
 800048c:	68fb      	ldr	r3, [r7, #12]
 800048e:	629a      	str	r2, [r3, #40]	; 0x28
		if(pGPIO->GPIO_addr  == GPIOE)
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	681b      	ldr	r3, [r3, #0]
 8000494:	4a10      	ldr	r2, [pc, #64]	; (80004d8 <GPIO_clk_control+0x158>)
 8000496:	4293      	cmp	r3, r2
 8000498:	d106      	bne.n	80004a8 <GPIO_clk_control+0x128>
					pRCC->RCC_AHBRSTR |= 1<<21;
 800049a:	68fb      	ldr	r3, [r7, #12]
 800049c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800049e:	2280      	movs	r2, #128	; 0x80
 80004a0:	0392      	lsls	r2, r2, #14
 80004a2:	431a      	orrs	r2, r3
 80004a4:	68fb      	ldr	r3, [r7, #12]
 80004a6:	629a      	str	r2, [r3, #40]	; 0x28
		if(pGPIO->GPIO_addr  == GPIOF)
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	681b      	ldr	r3, [r3, #0]
 80004ac:	4a0b      	ldr	r2, [pc, #44]	; (80004dc <GPIO_clk_control+0x15c>)
 80004ae:	4293      	cmp	r3, r2
 80004b0:	d106      	bne.n	80004c0 <GPIO_clk_control+0x140>
					pRCC->RCC_AHBRSTR |= 1<<22;
 80004b2:	68fb      	ldr	r3, [r7, #12]
 80004b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80004b6:	2280      	movs	r2, #128	; 0x80
 80004b8:	03d2      	lsls	r2, r2, #15
 80004ba:	431a      	orrs	r2, r3
 80004bc:	68fb      	ldr	r3, [r7, #12]
 80004be:	629a      	str	r2, [r3, #40]	; 0x28
}
 80004c0:	46c0      	nop			; (mov r8, r8)
 80004c2:	46bd      	mov	sp, r7
 80004c4:	b004      	add	sp, #16
 80004c6:	bd80      	pop	{r7, pc}
 80004c8:	40021000 	.word	0x40021000
 80004cc:	48000400 	.word	0x48000400
 80004d0:	48000800 	.word	0x48000800
 80004d4:	48000c00 	.word	0x48000c00
 80004d8:	48001000 	.word	0x48001000
 80004dc:	48001400 	.word	0x48001400

080004e0 <GPIO_init>:

//pin init
void GPIO_init(GPIO_handle *pGPIO)
{
 80004e0:	b590      	push	{r4, r7, lr}
 80004e2:	b085      	sub	sp, #20
 80004e4:	af00      	add	r7, sp, #0
 80004e6:	6078      	str	r0, [r7, #4]
	GPIO_clk_control(pGPIO, ENABLE);
 80004e8:	687b      	ldr	r3, [r7, #4]
 80004ea:	2101      	movs	r1, #1
 80004ec:	0018      	movs	r0, r3
 80004ee:	f7ff ff47 	bl	8000380 <GPIO_clk_control>

	if(pGPIO->GPIO_pin_config.GPIO_pin_mode != GPIO_EXTI)
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	795b      	ldrb	r3, [r3, #5]
 80004f6:	2b04      	cmp	r3, #4
 80004f8:	d100      	bne.n	80004fc <GPIO_init+0x1c>
 80004fa:	e099      	b.n	8000630 <GPIO_init+0x150>
	{
		pGPIO->GPIO_addr->MODER &= ~(0x3<<(pGPIO->GPIO_pin_config.GPIO_pin_number*2));
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	681b      	ldr	r3, [r3, #0]
 8000500:	681a      	ldr	r2, [r3, #0]
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	791b      	ldrb	r3, [r3, #4]
 8000506:	005b      	lsls	r3, r3, #1
 8000508:	2103      	movs	r1, #3
 800050a:	4099      	lsls	r1, r3
 800050c:	000b      	movs	r3, r1
 800050e:	43db      	mvns	r3, r3
 8000510:	0019      	movs	r1, r3
 8000512:	687b      	ldr	r3, [r7, #4]
 8000514:	681b      	ldr	r3, [r3, #0]
 8000516:	400a      	ands	r2, r1
 8000518:	601a      	str	r2, [r3, #0]
		pGPIO->GPIO_addr->MODER |= (pGPIO->GPIO_pin_config.GPIO_pin_mode)<<(pGPIO->GPIO_pin_config.GPIO_pin_number * 2 );
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	681a      	ldr	r2, [r3, #0]
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	795b      	ldrb	r3, [r3, #5]
 8000524:	0019      	movs	r1, r3
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	791b      	ldrb	r3, [r3, #4]
 800052a:	005b      	lsls	r3, r3, #1
 800052c:	4099      	lsls	r1, r3
 800052e:	000b      	movs	r3, r1
 8000530:	0019      	movs	r1, r3
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	430a      	orrs	r2, r1
 8000538:	601a      	str	r2, [r3, #0]

		if(pGPIO->GPIO_pin_config.GPIO_pin_mode == GPIO_OUTPUT)
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	795b      	ldrb	r3, [r3, #5]
 800053e:	2b01      	cmp	r3, #1
 8000540:	d135      	bne.n	80005ae <GPIO_init+0xce>
		{
			pGPIO->GPIO_addr->OSPEEDR &= ~(GPIO_SPEED_HIGH<<(pGPIO->GPIO_pin_config.GPIO_pin_number*2));
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	681b      	ldr	r3, [r3, #0]
 8000546:	689a      	ldr	r2, [r3, #8]
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	791b      	ldrb	r3, [r3, #4]
 800054c:	005b      	lsls	r3, r3, #1
 800054e:	2103      	movs	r1, #3
 8000550:	4099      	lsls	r1, r3
 8000552:	000b      	movs	r3, r1
 8000554:	43db      	mvns	r3, r3
 8000556:	0019      	movs	r1, r3
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	681b      	ldr	r3, [r3, #0]
 800055c:	400a      	ands	r2, r1
 800055e:	609a      	str	r2, [r3, #8]
			pGPIO->GPIO_addr->OSPEEDR |= GPIO_SPEED_HIGH<<(pGPIO->GPIO_pin_config.GPIO_pin_number*2);
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	681b      	ldr	r3, [r3, #0]
 8000564:	689a      	ldr	r2, [r3, #8]
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	791b      	ldrb	r3, [r3, #4]
 800056a:	005b      	lsls	r3, r3, #1
 800056c:	2103      	movs	r1, #3
 800056e:	4099      	lsls	r1, r3
 8000570:	000b      	movs	r3, r1
 8000572:	0019      	movs	r1, r3
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	681b      	ldr	r3, [r3, #0]
 8000578:	430a      	orrs	r2, r1
 800057a:	609a      	str	r2, [r3, #8]

			pGPIO->GPIO_addr->OTYPE &= ~(GPIO_OP_TYPE_PP<<(pGPIO->GPIO_pin_config.GPIO_pin_number));
 800057c:	687b      	ldr	r3, [r7, #4]
 800057e:	681a      	ldr	r2, [r3, #0]
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	681b      	ldr	r3, [r3, #0]
 8000584:	6852      	ldr	r2, [r2, #4]
 8000586:	605a      	str	r2, [r3, #4]
			pGPIO->GPIO_addr->OTYPE |= GPIO_OP_TYPE_PP<<(pGPIO->GPIO_pin_config.GPIO_pin_number*2);
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	681a      	ldr	r2, [r3, #0]
 800058c:	687b      	ldr	r3, [r7, #4]
 800058e:	681b      	ldr	r3, [r3, #0]
 8000590:	6852      	ldr	r2, [r2, #4]
 8000592:	605a      	str	r2, [r3, #4]

			pGPIO->GPIO_addr->PUPDR &= ~(GPIO_NO_PUPD<<(pGPIO->GPIO_pin_config.GPIO_pin_number));
 8000594:	687b      	ldr	r3, [r7, #4]
 8000596:	681a      	ldr	r2, [r3, #0]
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	681b      	ldr	r3, [r3, #0]
 800059c:	68d2      	ldr	r2, [r2, #12]
 800059e:	60da      	str	r2, [r3, #12]
			pGPIO->GPIO_addr->PUPDR |= GPIO_NO_PUPD<<(pGPIO->GPIO_pin_config.GPIO_pin_number*2);
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	681a      	ldr	r2, [r3, #0]
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	681b      	ldr	r3, [r3, #0]
 80005a8:	68d2      	ldr	r2, [r2, #12]
 80005aa:	60da      	str	r2, [r3, #12]
		}

	}


}
 80005ac:	e163      	b.n	8000876 <GPIO_init+0x396>
		else if(pGPIO->GPIO_pin_config.GPIO_pin_mode == GPIO_ALT_FUNCTION)
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	795b      	ldrb	r3, [r3, #5]
 80005b2:	2b02      	cmp	r3, #2
 80005b4:	d000      	beq.n	80005b8 <GPIO_init+0xd8>
 80005b6:	e15e      	b.n	8000876 <GPIO_init+0x396>
			(pGPIO->GPIO_addr->AFR[pGPIO->GPIO_pin_config.GPIO_pin_number/8]) &= ~(0xF<<(pGPIO->GPIO_pin_config.GPIO_pin_number%8*4));
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	687a      	ldr	r2, [r7, #4]
 80005be:	7912      	ldrb	r2, [r2, #4]
 80005c0:	08d2      	lsrs	r2, r2, #3
 80005c2:	b2d0      	uxtb	r0, r2
 80005c4:	0002      	movs	r2, r0
 80005c6:	3208      	adds	r2, #8
 80005c8:	0092      	lsls	r2, r2, #2
 80005ca:	58d2      	ldr	r2, [r2, r3]
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	791b      	ldrb	r3, [r3, #4]
 80005d0:	0019      	movs	r1, r3
 80005d2:	2307      	movs	r3, #7
 80005d4:	400b      	ands	r3, r1
 80005d6:	009b      	lsls	r3, r3, #2
 80005d8:	210f      	movs	r1, #15
 80005da:	4099      	lsls	r1, r3
 80005dc:	000b      	movs	r3, r1
 80005de:	43db      	mvns	r3, r3
 80005e0:	0019      	movs	r1, r3
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	681b      	ldr	r3, [r3, #0]
 80005e6:	4011      	ands	r1, r2
 80005e8:	0002      	movs	r2, r0
 80005ea:	3208      	adds	r2, #8
 80005ec:	0092      	lsls	r2, r2, #2
 80005ee:	50d1      	str	r1, [r2, r3]
			(pGPIO->GPIO_addr->AFR[pGPIO->GPIO_pin_config.GPIO_pin_number/8]) |= (pGPIO->GPIO_pin_config.GPIO_pin_ALT_function)<<(pGPIO->GPIO_pin_config.GPIO_pin_number%8*4);
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	681b      	ldr	r3, [r3, #0]
 80005f4:	687a      	ldr	r2, [r7, #4]
 80005f6:	7912      	ldrb	r2, [r2, #4]
 80005f8:	08d2      	lsrs	r2, r2, #3
 80005fa:	b2d1      	uxtb	r1, r2
 80005fc:	000a      	movs	r2, r1
 80005fe:	3208      	adds	r2, #8
 8000600:	0092      	lsls	r2, r2, #2
 8000602:	58d2      	ldr	r2, [r2, r3]
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	7a5b      	ldrb	r3, [r3, #9]
 8000608:	0018      	movs	r0, r3
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	791b      	ldrb	r3, [r3, #4]
 800060e:	001c      	movs	r4, r3
 8000610:	2307      	movs	r3, #7
 8000612:	4023      	ands	r3, r4
 8000614:	009b      	lsls	r3, r3, #2
 8000616:	4098      	lsls	r0, r3
 8000618:	0003      	movs	r3, r0
 800061a:	001c      	movs	r4, r3
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	681b      	ldr	r3, [r3, #0]
 8000620:	0008      	movs	r0, r1
 8000622:	4322      	orrs	r2, r4
 8000624:	0011      	movs	r1, r2
 8000626:	0002      	movs	r2, r0
 8000628:	3208      	adds	r2, #8
 800062a:	0092      	lsls	r2, r2, #2
 800062c:	50d1      	str	r1, [r2, r3]
}
 800062e:	e122      	b.n	8000876 <GPIO_init+0x396>
		EXTI_reg *pEXTI = EXTI;
 8000630:	4b93      	ldr	r3, [pc, #588]	; (8000880 <GPIO_init+0x3a0>)
 8000632:	60fb      	str	r3, [r7, #12]
		SYSCFG_reg *pSYSCFG = SYSCFG;
 8000634:	4b93      	ldr	r3, [pc, #588]	; (8000884 <GPIO_init+0x3a4>)
 8000636:	60bb      	str	r3, [r7, #8]
		pEXTI->EXTI_IMR |= 1<<(pGPIO->GPIO_pin_config.GPIO_pin_number);
 8000638:	68fb      	ldr	r3, [r7, #12]
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	687a      	ldr	r2, [r7, #4]
 800063e:	7912      	ldrb	r2, [r2, #4]
 8000640:	0011      	movs	r1, r2
 8000642:	2201      	movs	r2, #1
 8000644:	408a      	lsls	r2, r1
 8000646:	431a      	orrs	r2, r3
 8000648:	68fb      	ldr	r3, [r7, #12]
 800064a:	601a      	str	r2, [r3, #0]
		pSYSCFG->SYSCFG_EXTICR[pGPIO->GPIO_pin_config.GPIO_pin_number/4] &= ~(0xF<<(pGPIO->GPIO_pin_config.GPIO_pin_number%4*4));
 800064c:	687b      	ldr	r3, [r7, #4]
 800064e:	791b      	ldrb	r3, [r3, #4]
 8000650:	089b      	lsrs	r3, r3, #2
 8000652:	b2d8      	uxtb	r0, r3
 8000654:	0002      	movs	r2, r0
 8000656:	68bb      	ldr	r3, [r7, #8]
 8000658:	3202      	adds	r2, #2
 800065a:	0092      	lsls	r2, r2, #2
 800065c:	58d3      	ldr	r3, [r2, r3]
 800065e:	687a      	ldr	r2, [r7, #4]
 8000660:	7912      	ldrb	r2, [r2, #4]
 8000662:	0011      	movs	r1, r2
 8000664:	2203      	movs	r2, #3
 8000666:	400a      	ands	r2, r1
 8000668:	0092      	lsls	r2, r2, #2
 800066a:	210f      	movs	r1, #15
 800066c:	4091      	lsls	r1, r2
 800066e:	000a      	movs	r2, r1
 8000670:	43d2      	mvns	r2, r2
 8000672:	0011      	movs	r1, r2
 8000674:	0002      	movs	r2, r0
 8000676:	4019      	ands	r1, r3
 8000678:	68bb      	ldr	r3, [r7, #8]
 800067a:	3202      	adds	r2, #2
 800067c:	0092      	lsls	r2, r2, #2
 800067e:	50d1      	str	r1, [r2, r3]
		if(pGPIO->GPIO_addr == GPIOA)
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	681a      	ldr	r2, [r3, #0]
 8000684:	2390      	movs	r3, #144	; 0x90
 8000686:	05db      	lsls	r3, r3, #23
 8000688:	429a      	cmp	r2, r3
 800068a:	d10e      	bne.n	80006aa <GPIO_init+0x1ca>
			pSYSCFG->SYSCFG_EXTICR[pGPIO->GPIO_pin_config.GPIO_pin_number/4] |= 0x0<<(pGPIO->GPIO_pin_config.GPIO_pin_number%4*4);
 800068c:	687b      	ldr	r3, [r7, #4]
 800068e:	791b      	ldrb	r3, [r3, #4]
 8000690:	089b      	lsrs	r3, r3, #2
 8000692:	b2db      	uxtb	r3, r3
 8000694:	001a      	movs	r2, r3
 8000696:	0018      	movs	r0, r3
 8000698:	68bb      	ldr	r3, [r7, #8]
 800069a:	3202      	adds	r2, #2
 800069c:	0092      	lsls	r2, r2, #2
 800069e:	58d1      	ldr	r1, [r2, r3]
 80006a0:	68bb      	ldr	r3, [r7, #8]
 80006a2:	1c82      	adds	r2, r0, #2
 80006a4:	0092      	lsls	r2, r2, #2
 80006a6:	50d1      	str	r1, [r2, r3]
 80006a8:	e099      	b.n	80007de <GPIO_init+0x2fe>
		else if(pGPIO->GPIO_addr == GPIOB)
 80006aa:	687b      	ldr	r3, [r7, #4]
 80006ac:	681b      	ldr	r3, [r3, #0]
 80006ae:	4a76      	ldr	r2, [pc, #472]	; (8000888 <GPIO_init+0x3a8>)
 80006b0:	4293      	cmp	r3, r2
 80006b2:	d119      	bne.n	80006e8 <GPIO_init+0x208>
			pSYSCFG->SYSCFG_EXTICR[pGPIO->GPIO_pin_config.GPIO_pin_number/4] |= 0x1<<(pGPIO->GPIO_pin_config.GPIO_pin_number%4*4);
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	791b      	ldrb	r3, [r3, #4]
 80006b8:	089b      	lsrs	r3, r3, #2
 80006ba:	b2d8      	uxtb	r0, r3
 80006bc:	0002      	movs	r2, r0
 80006be:	68bb      	ldr	r3, [r7, #8]
 80006c0:	3202      	adds	r2, #2
 80006c2:	0092      	lsls	r2, r2, #2
 80006c4:	58d3      	ldr	r3, [r2, r3]
 80006c6:	687a      	ldr	r2, [r7, #4]
 80006c8:	7912      	ldrb	r2, [r2, #4]
 80006ca:	0011      	movs	r1, r2
 80006cc:	2203      	movs	r2, #3
 80006ce:	400a      	ands	r2, r1
 80006d0:	0092      	lsls	r2, r2, #2
 80006d2:	2101      	movs	r1, #1
 80006d4:	4091      	lsls	r1, r2
 80006d6:	000a      	movs	r2, r1
 80006d8:	0011      	movs	r1, r2
 80006da:	0002      	movs	r2, r0
 80006dc:	4319      	orrs	r1, r3
 80006de:	68bb      	ldr	r3, [r7, #8]
 80006e0:	3202      	adds	r2, #2
 80006e2:	0092      	lsls	r2, r2, #2
 80006e4:	50d1      	str	r1, [r2, r3]
 80006e6:	e07a      	b.n	80007de <GPIO_init+0x2fe>
		else if(pGPIO->GPIO_addr == GPIOC)
 80006e8:	687b      	ldr	r3, [r7, #4]
 80006ea:	681b      	ldr	r3, [r3, #0]
 80006ec:	4a67      	ldr	r2, [pc, #412]	; (800088c <GPIO_init+0x3ac>)
 80006ee:	4293      	cmp	r3, r2
 80006f0:	d119      	bne.n	8000726 <GPIO_init+0x246>
			pSYSCFG->SYSCFG_EXTICR[pGPIO->GPIO_pin_config.GPIO_pin_number/4] |= 0x2<<(pGPIO->GPIO_pin_config.GPIO_pin_number%4*4);
 80006f2:	687b      	ldr	r3, [r7, #4]
 80006f4:	791b      	ldrb	r3, [r3, #4]
 80006f6:	089b      	lsrs	r3, r3, #2
 80006f8:	b2d8      	uxtb	r0, r3
 80006fa:	0002      	movs	r2, r0
 80006fc:	68bb      	ldr	r3, [r7, #8]
 80006fe:	3202      	adds	r2, #2
 8000700:	0092      	lsls	r2, r2, #2
 8000702:	58d3      	ldr	r3, [r2, r3]
 8000704:	687a      	ldr	r2, [r7, #4]
 8000706:	7912      	ldrb	r2, [r2, #4]
 8000708:	0011      	movs	r1, r2
 800070a:	2203      	movs	r2, #3
 800070c:	400a      	ands	r2, r1
 800070e:	0092      	lsls	r2, r2, #2
 8000710:	2102      	movs	r1, #2
 8000712:	4091      	lsls	r1, r2
 8000714:	000a      	movs	r2, r1
 8000716:	0011      	movs	r1, r2
 8000718:	0002      	movs	r2, r0
 800071a:	4319      	orrs	r1, r3
 800071c:	68bb      	ldr	r3, [r7, #8]
 800071e:	3202      	adds	r2, #2
 8000720:	0092      	lsls	r2, r2, #2
 8000722:	50d1      	str	r1, [r2, r3]
 8000724:	e05b      	b.n	80007de <GPIO_init+0x2fe>
		else if(pGPIO->GPIO_addr == GPIOD)
 8000726:	687b      	ldr	r3, [r7, #4]
 8000728:	681b      	ldr	r3, [r3, #0]
 800072a:	4a59      	ldr	r2, [pc, #356]	; (8000890 <GPIO_init+0x3b0>)
 800072c:	4293      	cmp	r3, r2
 800072e:	d119      	bne.n	8000764 <GPIO_init+0x284>
			pSYSCFG->SYSCFG_EXTICR[pGPIO->GPIO_pin_config.GPIO_pin_number/4] |= 0x3<<(pGPIO->GPIO_pin_config.GPIO_pin_number%4*4);
 8000730:	687b      	ldr	r3, [r7, #4]
 8000732:	791b      	ldrb	r3, [r3, #4]
 8000734:	089b      	lsrs	r3, r3, #2
 8000736:	b2d8      	uxtb	r0, r3
 8000738:	0002      	movs	r2, r0
 800073a:	68bb      	ldr	r3, [r7, #8]
 800073c:	3202      	adds	r2, #2
 800073e:	0092      	lsls	r2, r2, #2
 8000740:	58d3      	ldr	r3, [r2, r3]
 8000742:	687a      	ldr	r2, [r7, #4]
 8000744:	7912      	ldrb	r2, [r2, #4]
 8000746:	0011      	movs	r1, r2
 8000748:	2203      	movs	r2, #3
 800074a:	400a      	ands	r2, r1
 800074c:	0092      	lsls	r2, r2, #2
 800074e:	2103      	movs	r1, #3
 8000750:	4091      	lsls	r1, r2
 8000752:	000a      	movs	r2, r1
 8000754:	0011      	movs	r1, r2
 8000756:	0002      	movs	r2, r0
 8000758:	4319      	orrs	r1, r3
 800075a:	68bb      	ldr	r3, [r7, #8]
 800075c:	3202      	adds	r2, #2
 800075e:	0092      	lsls	r2, r2, #2
 8000760:	50d1      	str	r1, [r2, r3]
 8000762:	e03c      	b.n	80007de <GPIO_init+0x2fe>
		else if(pGPIO->GPIO_addr == GPIOE)
 8000764:	687b      	ldr	r3, [r7, #4]
 8000766:	681b      	ldr	r3, [r3, #0]
 8000768:	4a4a      	ldr	r2, [pc, #296]	; (8000894 <GPIO_init+0x3b4>)
 800076a:	4293      	cmp	r3, r2
 800076c:	d119      	bne.n	80007a2 <GPIO_init+0x2c2>
			pSYSCFG->SYSCFG_EXTICR[pGPIO->GPIO_pin_config.GPIO_pin_number/4] |= 0x4<<(pGPIO->GPIO_pin_config.GPIO_pin_number%4*4);
 800076e:	687b      	ldr	r3, [r7, #4]
 8000770:	791b      	ldrb	r3, [r3, #4]
 8000772:	089b      	lsrs	r3, r3, #2
 8000774:	b2d8      	uxtb	r0, r3
 8000776:	0002      	movs	r2, r0
 8000778:	68bb      	ldr	r3, [r7, #8]
 800077a:	3202      	adds	r2, #2
 800077c:	0092      	lsls	r2, r2, #2
 800077e:	58d3      	ldr	r3, [r2, r3]
 8000780:	687a      	ldr	r2, [r7, #4]
 8000782:	7912      	ldrb	r2, [r2, #4]
 8000784:	0011      	movs	r1, r2
 8000786:	2203      	movs	r2, #3
 8000788:	400a      	ands	r2, r1
 800078a:	0092      	lsls	r2, r2, #2
 800078c:	2104      	movs	r1, #4
 800078e:	4091      	lsls	r1, r2
 8000790:	000a      	movs	r2, r1
 8000792:	0011      	movs	r1, r2
 8000794:	0002      	movs	r2, r0
 8000796:	4319      	orrs	r1, r3
 8000798:	68bb      	ldr	r3, [r7, #8]
 800079a:	3202      	adds	r2, #2
 800079c:	0092      	lsls	r2, r2, #2
 800079e:	50d1      	str	r1, [r2, r3]
 80007a0:	e01d      	b.n	80007de <GPIO_init+0x2fe>
		else if(pGPIO->GPIO_addr == GPIOF)
 80007a2:	687b      	ldr	r3, [r7, #4]
 80007a4:	681b      	ldr	r3, [r3, #0]
 80007a6:	4a3c      	ldr	r2, [pc, #240]	; (8000898 <GPIO_init+0x3b8>)
 80007a8:	4293      	cmp	r3, r2
 80007aa:	d118      	bne.n	80007de <GPIO_init+0x2fe>
			pSYSCFG->SYSCFG_EXTICR[pGPIO->GPIO_pin_config.GPIO_pin_number/4] |= 0x5<<(pGPIO->GPIO_pin_config.GPIO_pin_number%4*4);
 80007ac:	687b      	ldr	r3, [r7, #4]
 80007ae:	791b      	ldrb	r3, [r3, #4]
 80007b0:	089b      	lsrs	r3, r3, #2
 80007b2:	b2d8      	uxtb	r0, r3
 80007b4:	0002      	movs	r2, r0
 80007b6:	68bb      	ldr	r3, [r7, #8]
 80007b8:	3202      	adds	r2, #2
 80007ba:	0092      	lsls	r2, r2, #2
 80007bc:	58d3      	ldr	r3, [r2, r3]
 80007be:	687a      	ldr	r2, [r7, #4]
 80007c0:	7912      	ldrb	r2, [r2, #4]
 80007c2:	0011      	movs	r1, r2
 80007c4:	2203      	movs	r2, #3
 80007c6:	400a      	ands	r2, r1
 80007c8:	0092      	lsls	r2, r2, #2
 80007ca:	2105      	movs	r1, #5
 80007cc:	4091      	lsls	r1, r2
 80007ce:	000a      	movs	r2, r1
 80007d0:	0011      	movs	r1, r2
 80007d2:	0002      	movs	r2, r0
 80007d4:	4319      	orrs	r1, r3
 80007d6:	68bb      	ldr	r3, [r7, #8]
 80007d8:	3202      	adds	r2, #2
 80007da:	0092      	lsls	r2, r2, #2
 80007dc:	50d1      	str	r1, [r2, r3]
		if(pGPIO->GPIO_pin_config.GPIO_IRQ_edge == GPIO_IRQ_FT)
 80007de:	687b      	ldr	r3, [r7, #4]
 80007e0:	7b5b      	ldrb	r3, [r3, #13]
 80007e2:	2b00      	cmp	r3, #0
 80007e4:	d115      	bne.n	8000812 <GPIO_init+0x332>
			pEXTI->EXTI_FTSR |= 1<<(pGPIO->GPIO_pin_config.GPIO_pin_number);
 80007e6:	68fb      	ldr	r3, [r7, #12]
 80007e8:	68db      	ldr	r3, [r3, #12]
 80007ea:	687a      	ldr	r2, [r7, #4]
 80007ec:	7912      	ldrb	r2, [r2, #4]
 80007ee:	0011      	movs	r1, r2
 80007f0:	2201      	movs	r2, #1
 80007f2:	408a      	lsls	r2, r1
 80007f4:	431a      	orrs	r2, r3
 80007f6:	68fb      	ldr	r3, [r7, #12]
 80007f8:	60da      	str	r2, [r3, #12]
			pEXTI->EXTI_RTSR &= ~(1<<(pGPIO->GPIO_pin_config.GPIO_pin_number));
 80007fa:	68fb      	ldr	r3, [r7, #12]
 80007fc:	689b      	ldr	r3, [r3, #8]
 80007fe:	687a      	ldr	r2, [r7, #4]
 8000800:	7912      	ldrb	r2, [r2, #4]
 8000802:	0011      	movs	r1, r2
 8000804:	2201      	movs	r2, #1
 8000806:	408a      	lsls	r2, r1
 8000808:	43d2      	mvns	r2, r2
 800080a:	401a      	ands	r2, r3
 800080c:	68fb      	ldr	r3, [r7, #12]
 800080e:	609a      	str	r2, [r3, #8]
}
 8000810:	e031      	b.n	8000876 <GPIO_init+0x396>
		else if( pGPIO->GPIO_pin_config.GPIO_IRQ_edge == GPIO_IRQ_RT)
 8000812:	687b      	ldr	r3, [r7, #4]
 8000814:	7b5b      	ldrb	r3, [r3, #13]
 8000816:	2b01      	cmp	r3, #1
 8000818:	d115      	bne.n	8000846 <GPIO_init+0x366>
			pEXTI->EXTI_RTSR |= 1<<(pGPIO->GPIO_pin_config.GPIO_pin_number);
 800081a:	68fb      	ldr	r3, [r7, #12]
 800081c:	689b      	ldr	r3, [r3, #8]
 800081e:	687a      	ldr	r2, [r7, #4]
 8000820:	7912      	ldrb	r2, [r2, #4]
 8000822:	0011      	movs	r1, r2
 8000824:	2201      	movs	r2, #1
 8000826:	408a      	lsls	r2, r1
 8000828:	431a      	orrs	r2, r3
 800082a:	68fb      	ldr	r3, [r7, #12]
 800082c:	609a      	str	r2, [r3, #8]
			pEXTI->EXTI_FTSR &= ~(1<<(pGPIO->GPIO_pin_config.GPIO_pin_mode));
 800082e:	68fb      	ldr	r3, [r7, #12]
 8000830:	68db      	ldr	r3, [r3, #12]
 8000832:	687a      	ldr	r2, [r7, #4]
 8000834:	7952      	ldrb	r2, [r2, #5]
 8000836:	0011      	movs	r1, r2
 8000838:	2201      	movs	r2, #1
 800083a:	408a      	lsls	r2, r1
 800083c:	43d2      	mvns	r2, r2
 800083e:	401a      	ands	r2, r3
 8000840:	68fb      	ldr	r3, [r7, #12]
 8000842:	60da      	str	r2, [r3, #12]
}
 8000844:	e017      	b.n	8000876 <GPIO_init+0x396>
		else if(pGPIO->GPIO_pin_config.GPIO_IRQ_edge == GPIO_IRQ_BT)
 8000846:	687b      	ldr	r3, [r7, #4]
 8000848:	7b5b      	ldrb	r3, [r3, #13]
 800084a:	2b02      	cmp	r3, #2
 800084c:	d113      	bne.n	8000876 <GPIO_init+0x396>
			pEXTI->EXTI_FTSR |= 1<<(pGPIO->GPIO_pin_config.GPIO_pin_number);
 800084e:	68fb      	ldr	r3, [r7, #12]
 8000850:	68db      	ldr	r3, [r3, #12]
 8000852:	687a      	ldr	r2, [r7, #4]
 8000854:	7912      	ldrb	r2, [r2, #4]
 8000856:	0011      	movs	r1, r2
 8000858:	2201      	movs	r2, #1
 800085a:	408a      	lsls	r2, r1
 800085c:	431a      	orrs	r2, r3
 800085e:	68fb      	ldr	r3, [r7, #12]
 8000860:	60da      	str	r2, [r3, #12]
			pEXTI->EXTI_RTSR |= 1<<(pGPIO->GPIO_pin_config.GPIO_pin_number);
 8000862:	68fb      	ldr	r3, [r7, #12]
 8000864:	689b      	ldr	r3, [r3, #8]
 8000866:	687a      	ldr	r2, [r7, #4]
 8000868:	7912      	ldrb	r2, [r2, #4]
 800086a:	0011      	movs	r1, r2
 800086c:	2201      	movs	r2, #1
 800086e:	408a      	lsls	r2, r1
 8000870:	431a      	orrs	r2, r3
 8000872:	68fb      	ldr	r3, [r7, #12]
 8000874:	609a      	str	r2, [r3, #8]
}
 8000876:	46c0      	nop			; (mov r8, r8)
 8000878:	46bd      	mov	sp, r7
 800087a:	b005      	add	sp, #20
 800087c:	bd90      	pop	{r4, r7, pc}
 800087e:	46c0      	nop			; (mov r8, r8)
 8000880:	40010400 	.word	0x40010400
 8000884:	40010000 	.word	0x40010000
 8000888:	48000400 	.word	0x48000400
 800088c:	48000800 	.word	0x48000800
 8000890:	48000c00 	.word	0x48000c00
 8000894:	48001000 	.word	0x48001000
 8000898:	48001400 	.word	0x48001400

0800089c <GPIO_toggle>:
		pGPIO->GPIO_addr->ODR &= ~(1<<pGPIO->GPIO_pin_config.GPIO_pin_number);
	}
}

void GPIO_toggle(GPIO_handle *pGPIO)
{
 800089c:	b580      	push	{r7, lr}
 800089e:	b082      	sub	sp, #8
 80008a0:	af00      	add	r7, sp, #0
 80008a2:	6078      	str	r0, [r7, #4]
	pGPIO->GPIO_addr->ODR ^= 1<<pGPIO->GPIO_pin_config.GPIO_pin_number;
 80008a4:	687b      	ldr	r3, [r7, #4]
 80008a6:	681b      	ldr	r3, [r3, #0]
 80008a8:	695a      	ldr	r2, [r3, #20]
 80008aa:	687b      	ldr	r3, [r7, #4]
 80008ac:	791b      	ldrb	r3, [r3, #4]
 80008ae:	0019      	movs	r1, r3
 80008b0:	2301      	movs	r3, #1
 80008b2:	408b      	lsls	r3, r1
 80008b4:	0019      	movs	r1, r3
 80008b6:	687b      	ldr	r3, [r7, #4]
 80008b8:	681b      	ldr	r3, [r3, #0]
 80008ba:	404a      	eors	r2, r1
 80008bc:	615a      	str	r2, [r3, #20]
}
 80008be:	46c0      	nop			; (mov r8, r8)
 80008c0:	46bd      	mov	sp, r7
 80008c2:	b002      	add	sp, #8
 80008c4:	bd80      	pop	{r7, pc}
	...

080008c8 <GPIO_IRQ_config>:

//IRQ configuration
void GPIO_IRQ_config(GPIO_handle *pGPIO_irq)
{
 80008c8:	b590      	push	{r4, r7, lr}
 80008ca:	b083      	sub	sp, #12
 80008cc:	af00      	add	r7, sp, #0
 80008ce:	6078      	str	r0, [r7, #4]

	if (pGPIO_irq->GPIO_pin_config.GPIO_IRQ_mode > 0)
 80008d0:	687b      	ldr	r3, [r7, #4]
 80008d2:	7b1b      	ldrb	r3, [r3, #12]
 80008d4:	2b00      	cmp	r3, #0
 80008d6:	d045      	beq.n	8000964 <GPIO_IRQ_config+0x9c>
	{
		//set priority
		*(NVIC_IPR + (pGPIO_irq->GPIO_pin_config.GPIO_IRQ_number / 4)) &= ~(0xFF << (pGPIO_irq->GPIO_pin_config.GPIO_IRQ_number % 4 * 8 + 4));
 80008d8:	687b      	ldr	r3, [r7, #4]
 80008da:	7a9b      	ldrb	r3, [r3, #10]
 80008dc:	089b      	lsrs	r3, r3, #2
 80008de:	b2d8      	uxtb	r0, r3
 80008e0:	0003      	movs	r3, r0
 80008e2:	009b      	lsls	r3, r3, #2
 80008e4:	4a21      	ldr	r2, [pc, #132]	; (800096c <GPIO_IRQ_config+0xa4>)
 80008e6:	4694      	mov	ip, r2
 80008e8:	4463      	add	r3, ip
 80008ea:	681a      	ldr	r2, [r3, #0]
 80008ec:	687b      	ldr	r3, [r7, #4]
 80008ee:	7a9b      	ldrb	r3, [r3, #10]
 80008f0:	0019      	movs	r1, r3
 80008f2:	2303      	movs	r3, #3
 80008f4:	400b      	ands	r3, r1
 80008f6:	00db      	lsls	r3, r3, #3
 80008f8:	3304      	adds	r3, #4
 80008fa:	21ff      	movs	r1, #255	; 0xff
 80008fc:	4099      	lsls	r1, r3
 80008fe:	000b      	movs	r3, r1
 8000900:	43db      	mvns	r3, r3
 8000902:	0019      	movs	r1, r3
 8000904:	0003      	movs	r3, r0
 8000906:	009b      	lsls	r3, r3, #2
 8000908:	4818      	ldr	r0, [pc, #96]	; (800096c <GPIO_IRQ_config+0xa4>)
 800090a:	4684      	mov	ip, r0
 800090c:	4463      	add	r3, ip
 800090e:	400a      	ands	r2, r1
 8000910:	601a      	str	r2, [r3, #0]
		*(NVIC_IPR + (pGPIO_irq->GPIO_pin_config.GPIO_IRQ_number / 4)) |=  pGPIO_irq->GPIO_pin_config.GPIO_IRQ_priority << (pGPIO_irq->GPIO_pin_config.GPIO_IRQ_number % 4 * 8 + 4);
 8000912:	687b      	ldr	r3, [r7, #4]
 8000914:	7a9b      	ldrb	r3, [r3, #10]
 8000916:	089b      	lsrs	r3, r3, #2
 8000918:	b2d9      	uxtb	r1, r3
 800091a:	000b      	movs	r3, r1
 800091c:	009b      	lsls	r3, r3, #2
 800091e:	4a13      	ldr	r2, [pc, #76]	; (800096c <GPIO_IRQ_config+0xa4>)
 8000920:	4694      	mov	ip, r2
 8000922:	4463      	add	r3, ip
 8000924:	681a      	ldr	r2, [r3, #0]
 8000926:	687b      	ldr	r3, [r7, #4]
 8000928:	7adb      	ldrb	r3, [r3, #11]
 800092a:	0018      	movs	r0, r3
 800092c:	687b      	ldr	r3, [r7, #4]
 800092e:	7a9b      	ldrb	r3, [r3, #10]
 8000930:	001c      	movs	r4, r3
 8000932:	2303      	movs	r3, #3
 8000934:	4023      	ands	r3, r4
 8000936:	00db      	lsls	r3, r3, #3
 8000938:	3304      	adds	r3, #4
 800093a:	4098      	lsls	r0, r3
 800093c:	0003      	movs	r3, r0
 800093e:	0018      	movs	r0, r3
 8000940:	000b      	movs	r3, r1
 8000942:	009b      	lsls	r3, r3, #2
 8000944:	4909      	ldr	r1, [pc, #36]	; (800096c <GPIO_IRQ_config+0xa4>)
 8000946:	468c      	mov	ip, r1
 8000948:	4463      	add	r3, ip
 800094a:	4302      	orrs	r2, r0
 800094c:	601a      	str	r2, [r3, #0]

		//enable global interrupt
		*(NVIC_ISER) |= 1<<pGPIO_irq->GPIO_pin_config.GPIO_IRQ_number;
 800094e:	4b08      	ldr	r3, [pc, #32]	; (8000970 <GPIO_IRQ_config+0xa8>)
 8000950:	681a      	ldr	r2, [r3, #0]
 8000952:	687b      	ldr	r3, [r7, #4]
 8000954:	7a9b      	ldrb	r3, [r3, #10]
 8000956:	0019      	movs	r1, r3
 8000958:	2301      	movs	r3, #1
 800095a:	408b      	lsls	r3, r1
 800095c:	0019      	movs	r1, r3
 800095e:	4b04      	ldr	r3, [pc, #16]	; (8000970 <GPIO_IRQ_config+0xa8>)
 8000960:	430a      	orrs	r2, r1
 8000962:	601a      	str	r2, [r3, #0]
	}
}
 8000964:	46c0      	nop			; (mov r8, r8)
 8000966:	46bd      	mov	sp, r7
 8000968:	b003      	add	sp, #12
 800096a:	bd90      	pop	{r4, r7, pc}
 800096c:	e000e400 	.word	0xe000e400
 8000970:	e000e100 	.word	0xe000e100

08000974 <main>:





int main(void) {
 8000974:	b580      	push	{r7, lr}
 8000976:	af00      	add	r7, sp, #0
	memset(rx_buffer,0,sizeof(rx_buffer));
 8000978:	4b60      	ldr	r3, [pc, #384]	; (8000afc <main+0x188>)
 800097a:	2264      	movs	r2, #100	; 0x64
 800097c:	2100      	movs	r1, #0
 800097e:	0018      	movs	r0, r3
 8000980:	f000 f94a 	bl	8000c18 <memset>

	LED = (GPIO_handle*)(malloc(sizeof(GPIO_handle)));
 8000984:	2010      	movs	r0, #16
 8000986:	f000 f93d 	bl	8000c04 <malloc>
 800098a:	0003      	movs	r3, r0
 800098c:	001a      	movs	r2, r3
 800098e:	4b5c      	ldr	r3, [pc, #368]	; (8000b00 <main+0x18c>)
 8000990:	601a      	str	r2, [r3, #0]
	memset(LED,0,sizeof(GPIO_handle));
 8000992:	4b5b      	ldr	r3, [pc, #364]	; (8000b00 <main+0x18c>)
 8000994:	681b      	ldr	r3, [r3, #0]
 8000996:	2210      	movs	r2, #16
 8000998:	2100      	movs	r1, #0
 800099a:	0018      	movs	r0, r3
 800099c:	f000 f93c 	bl	8000c18 <memset>
	LED->GPIO_addr = GPIOC;
 80009a0:	4b57      	ldr	r3, [pc, #348]	; (8000b00 <main+0x18c>)
 80009a2:	681b      	ldr	r3, [r3, #0]
 80009a4:	4a57      	ldr	r2, [pc, #348]	; (8000b04 <main+0x190>)
 80009a6:	601a      	str	r2, [r3, #0]
	LED->GPIO_pin_config.GPIO_pin_number = 9;
 80009a8:	4b55      	ldr	r3, [pc, #340]	; (8000b00 <main+0x18c>)
 80009aa:	681b      	ldr	r3, [r3, #0]
 80009ac:	2209      	movs	r2, #9
 80009ae:	711a      	strb	r2, [r3, #4]
	LED->GPIO_pin_config.GPIO_pin_mode = GPIO_OUTPUT;
 80009b0:	4b53      	ldr	r3, [pc, #332]	; (8000b00 <main+0x18c>)
 80009b2:	681b      	ldr	r3, [r3, #0]
 80009b4:	2201      	movs	r2, #1
 80009b6:	715a      	strb	r2, [r3, #5]
	LED->GPIO_pin_config.GPIO_pin_speed =  GPIO_SPEED_HIGH;
 80009b8:	4b51      	ldr	r3, [pc, #324]	; (8000b00 <main+0x18c>)
 80009ba:	681b      	ldr	r3, [r3, #0]
 80009bc:	2203      	movs	r2, #3
 80009be:	719a      	strb	r2, [r3, #6]
	LED->GPIO_pin_config.GPIO_pin_OP_type = GPIO_OP_TYPE_PP;
 80009c0:	4b4f      	ldr	r3, [pc, #316]	; (8000b00 <main+0x18c>)
 80009c2:	681b      	ldr	r3, [r3, #0]
 80009c4:	2200      	movs	r2, #0
 80009c6:	721a      	strb	r2, [r3, #8]
	GPIO_init(LED);
 80009c8:	4b4d      	ldr	r3, [pc, #308]	; (8000b00 <main+0x18c>)
 80009ca:	681b      	ldr	r3, [r3, #0]
 80009cc:	0018      	movs	r0, r3
 80009ce:	f7ff fd87 	bl	80004e0 <GPIO_init>


	LED_2 = (GPIO_handle*) (malloc(sizeof(GPIO_handle)));
 80009d2:	2010      	movs	r0, #16
 80009d4:	f000 f916 	bl	8000c04 <malloc>
 80009d8:	0003      	movs	r3, r0
 80009da:	001a      	movs	r2, r3
 80009dc:	4b4a      	ldr	r3, [pc, #296]	; (8000b08 <main+0x194>)
 80009de:	601a      	str	r2, [r3, #0]
	memset(LED_2, 0, sizeof(GPIO_handle));
 80009e0:	4b49      	ldr	r3, [pc, #292]	; (8000b08 <main+0x194>)
 80009e2:	681b      	ldr	r3, [r3, #0]
 80009e4:	2210      	movs	r2, #16
 80009e6:	2100      	movs	r1, #0
 80009e8:	0018      	movs	r0, r3
 80009ea:	f000 f915 	bl	8000c18 <memset>
	LED_2->GPIO_addr = GPIOC;
 80009ee:	4b46      	ldr	r3, [pc, #280]	; (8000b08 <main+0x194>)
 80009f0:	681b      	ldr	r3, [r3, #0]
 80009f2:	4a44      	ldr	r2, [pc, #272]	; (8000b04 <main+0x190>)
 80009f4:	601a      	str	r2, [r3, #0]
	LED_2->GPIO_pin_config.GPIO_pin_number = 8;
 80009f6:	4b44      	ldr	r3, [pc, #272]	; (8000b08 <main+0x194>)
 80009f8:	681b      	ldr	r3, [r3, #0]
 80009fa:	2208      	movs	r2, #8
 80009fc:	711a      	strb	r2, [r3, #4]
	LED_2->GPIO_pin_config.GPIO_pin_mode = GPIO_OUTPUT;
 80009fe:	4b42      	ldr	r3, [pc, #264]	; (8000b08 <main+0x194>)
 8000a00:	681b      	ldr	r3, [r3, #0]
 8000a02:	2201      	movs	r2, #1
 8000a04:	715a      	strb	r2, [r3, #5]
	LED_2->GPIO_pin_config.GPIO_pin_speed = GPIO_SPEED_HIGH;
 8000a06:	4b40      	ldr	r3, [pc, #256]	; (8000b08 <main+0x194>)
 8000a08:	681b      	ldr	r3, [r3, #0]
 8000a0a:	2203      	movs	r2, #3
 8000a0c:	719a      	strb	r2, [r3, #6]
	LED_2->GPIO_pin_config.GPIO_pin_OP_type = GPIO_OP_TYPE_PP;
 8000a0e:	4b3e      	ldr	r3, [pc, #248]	; (8000b08 <main+0x194>)
 8000a10:	681b      	ldr	r3, [r3, #0]
 8000a12:	2200      	movs	r2, #0
 8000a14:	721a      	strb	r2, [r3, #8]
	GPIO_init(LED_2);
 8000a16:	4b3c      	ldr	r3, [pc, #240]	; (8000b08 <main+0x194>)
 8000a18:	681b      	ldr	r3, [r3, #0]
 8000a1a:	0018      	movs	r0, r3
 8000a1c:	f7ff fd60 	bl	80004e0 <GPIO_init>


	BTN  = (GPIO_handle*)(malloc(sizeof(GPIO_handle)));
 8000a20:	2010      	movs	r0, #16
 8000a22:	f000 f8ef 	bl	8000c04 <malloc>
 8000a26:	0003      	movs	r3, r0
 8000a28:	001a      	movs	r2, r3
 8000a2a:	4b38      	ldr	r3, [pc, #224]	; (8000b0c <main+0x198>)
 8000a2c:	601a      	str	r2, [r3, #0]
	memset(BTN,0,sizeof(GPIO_handle));
 8000a2e:	4b37      	ldr	r3, [pc, #220]	; (8000b0c <main+0x198>)
 8000a30:	681b      	ldr	r3, [r3, #0]
 8000a32:	2210      	movs	r2, #16
 8000a34:	2100      	movs	r1, #0
 8000a36:	0018      	movs	r0, r3
 8000a38:	f000 f8ee 	bl	8000c18 <memset>
	BTN->GPIO_addr = GPIOA;
 8000a3c:	4b33      	ldr	r3, [pc, #204]	; (8000b0c <main+0x198>)
 8000a3e:	681b      	ldr	r3, [r3, #0]
 8000a40:	2290      	movs	r2, #144	; 0x90
 8000a42:	05d2      	lsls	r2, r2, #23
 8000a44:	601a      	str	r2, [r3, #0]
	BTN->GPIO_pin_config.GPIO_pin_number = 0;
 8000a46:	4b31      	ldr	r3, [pc, #196]	; (8000b0c <main+0x198>)
 8000a48:	681b      	ldr	r3, [r3, #0]
 8000a4a:	2200      	movs	r2, #0
 8000a4c:	711a      	strb	r2, [r3, #4]
	BTN->GPIO_pin_config.GPIO_pin_mode = GPIO_EXTI;
 8000a4e:	4b2f      	ldr	r3, [pc, #188]	; (8000b0c <main+0x198>)
 8000a50:	681b      	ldr	r3, [r3, #0]
 8000a52:	2204      	movs	r2, #4
 8000a54:	715a      	strb	r2, [r3, #5]
	BTN->GPIO_pin_config.GPIO_IRQ_edge = GPIO_IRQ_FT;
 8000a56:	4b2d      	ldr	r3, [pc, #180]	; (8000b0c <main+0x198>)
 8000a58:	681b      	ldr	r3, [r3, #0]
 8000a5a:	2200      	movs	r2, #0
 8000a5c:	735a      	strb	r2, [r3, #13]
	BTN->GPIO_pin_config.GPIO_IRQ_mode = ENABLE;
 8000a5e:	4b2b      	ldr	r3, [pc, #172]	; (8000b0c <main+0x198>)
 8000a60:	681b      	ldr	r3, [r3, #0]
 8000a62:	2201      	movs	r2, #1
 8000a64:	731a      	strb	r2, [r3, #12]
	BTN->GPIO_pin_config.GPIO_IRQ_number = 5;
 8000a66:	4b29      	ldr	r3, [pc, #164]	; (8000b0c <main+0x198>)
 8000a68:	681b      	ldr	r3, [r3, #0]
 8000a6a:	2205      	movs	r2, #5
 8000a6c:	729a      	strb	r2, [r3, #10]
	BTN->GPIO_pin_config.GPIO_IRQ_priority = 10;
 8000a6e:	4b27      	ldr	r3, [pc, #156]	; (8000b0c <main+0x198>)
 8000a70:	681b      	ldr	r3, [r3, #0]
 8000a72:	220a      	movs	r2, #10
 8000a74:	72da      	strb	r2, [r3, #11]
	GPIO_init(BTN);
 8000a76:	4b25      	ldr	r3, [pc, #148]	; (8000b0c <main+0x198>)
 8000a78:	681b      	ldr	r3, [r3, #0]
 8000a7a:	0018      	movs	r0, r3
 8000a7c:	f7ff fd30 	bl	80004e0 <GPIO_init>


	GPIO_IRQ_config(BTN);
 8000a80:	4b22      	ldr	r3, [pc, #136]	; (8000b0c <main+0x198>)
 8000a82:	681b      	ldr	r3, [r3, #0]
 8000a84:	0018      	movs	r0, r3
 8000a86:	f7ff ff1f 	bl	80008c8 <GPIO_IRQ_config>


	pUSART = (USART_handle*)(malloc(sizeof(USART_handle)));
 8000a8a:	2014      	movs	r0, #20
 8000a8c:	f000 f8ba 	bl	8000c04 <malloc>
 8000a90:	0003      	movs	r3, r0
 8000a92:	001a      	movs	r2, r3
 8000a94:	4b1e      	ldr	r3, [pc, #120]	; (8000b10 <main+0x19c>)
 8000a96:	601a      	str	r2, [r3, #0]
	memset(pUSART,0,sizeof(USART_handle));
 8000a98:	4b1d      	ldr	r3, [pc, #116]	; (8000b10 <main+0x19c>)
 8000a9a:	681b      	ldr	r3, [r3, #0]
 8000a9c:	2214      	movs	r2, #20
 8000a9e:	2100      	movs	r1, #0
 8000aa0:	0018      	movs	r0, r3
 8000aa2:	f000 f8b9 	bl	8000c18 <memset>
	pUSART->base_addr = USART1;
 8000aa6:	4b1a      	ldr	r3, [pc, #104]	; (8000b10 <main+0x19c>)
 8000aa8:	681b      	ldr	r3, [r3, #0]
 8000aaa:	4a1a      	ldr	r2, [pc, #104]	; (8000b14 <main+0x1a0>)
 8000aac:	601a      	str	r2, [r3, #0]
	pUSART->config.USART_mode = USART_TX_RX;
 8000aae:	4b18      	ldr	r3, [pc, #96]	; (8000b10 <main+0x19c>)
 8000ab0:	681b      	ldr	r3, [r3, #0]
 8000ab2:	220c      	movs	r2, #12
 8000ab4:	711a      	strb	r2, [r3, #4]
	pUSART->config.USART_oversampling= USART_OVERSAMPLING_16;
 8000ab6:	4b16      	ldr	r3, [pc, #88]	; (8000b10 <main+0x19c>)
 8000ab8:	681b      	ldr	r3, [r3, #0]
 8000aba:	2200      	movs	r2, #0
 8000abc:	73da      	strb	r2, [r3, #15]
	pUSART->config.USART_baudrate = USART_BAUD_9600;
 8000abe:	4b14      	ldr	r3, [pc, #80]	; (8000b10 <main+0x19c>)
 8000ac0:	681b      	ldr	r3, [r3, #0]
 8000ac2:	4a15      	ldr	r2, [pc, #84]	; (8000b18 <main+0x1a4>)
 8000ac4:	609a      	str	r2, [r3, #8]
	pUSART->config.USART_parity = DISABLE;
 8000ac6:	4b12      	ldr	r3, [pc, #72]	; (8000b10 <main+0x19c>)
 8000ac8:	681b      	ldr	r3, [r3, #0]
 8000aca:	2200      	movs	r2, #0
 8000acc:	735a      	strb	r2, [r3, #13]
	pUSART->config.USART_word_len = USART_DATA_BIT_8;
 8000ace:	4b10      	ldr	r3, [pc, #64]	; (8000b10 <main+0x19c>)
 8000ad0:	681b      	ldr	r3, [r3, #0]
 8000ad2:	2200      	movs	r2, #0
 8000ad4:	739a      	strb	r2, [r3, #14]
	pUSART->config.USART_stop = USART_STOP_1;
 8000ad6:	4b0e      	ldr	r3, [pc, #56]	; (8000b10 <main+0x19c>)
 8000ad8:	681b      	ldr	r3, [r3, #0]
 8000ada:	2200      	movs	r2, #0
 8000adc:	731a      	strb	r2, [r3, #12]
	pUSART->config.USART_IRQ_number = 27;
 8000ade:	4b0c      	ldr	r3, [pc, #48]	; (8000b10 <main+0x19c>)
 8000ae0:	681b      	ldr	r3, [r3, #0]
 8000ae2:	221b      	movs	r2, #27
 8000ae4:	745a      	strb	r2, [r3, #17]
	USART_init(pUSART);
 8000ae6:	4b0a      	ldr	r3, [pc, #40]	; (8000b10 <main+0x19c>)
 8000ae8:	681b      	ldr	r3, [r3, #0]
 8000aea:	0018      	movs	r0, r3
 8000aec:	f7ff fb3e 	bl	800016c <USART_init>
	USART_IRQ_config(pUSART);
 8000af0:	4b07      	ldr	r3, [pc, #28]	; (8000b10 <main+0x19c>)
 8000af2:	681b      	ldr	r3, [r3, #0]
 8000af4:	0018      	movs	r0, r3
 8000af6:	f7ff fc25 	bl	8000344 <USART_IRQ_config>



	while (1);
 8000afa:	e7fe      	b.n	8000afa <main+0x186>
 8000afc:	2000008c 	.word	0x2000008c
 8000b00:	200000f4 	.word	0x200000f4
 8000b04:	48000800 	.word	0x48000800
 8000b08:	200000f8 	.word	0x200000f8
 8000b0c:	200000f0 	.word	0x200000f0
 8000b10:	200000fc 	.word	0x200000fc
 8000b14:	40013800 	.word	0x40013800
 8000b18:	00000341 	.word	0x00000341

08000b1c <USART1_IRQHandler>:
}


void USART1_IRQHandler()
{
 8000b1c:	b5b0      	push	{r4, r5, r7, lr}
 8000b1e:	af00      	add	r7, sp, #0
	rx_buffer[strlen(rx_buffer)] = (char) pUSART->base_addr->USART_RDR;
 8000b20:	4b0c      	ldr	r3, [pc, #48]	; (8000b54 <USART1_IRQHandler+0x38>)
 8000b22:	681b      	ldr	r3, [r3, #0]
 8000b24:	681b      	ldr	r3, [r3, #0]
 8000b26:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 8000b28:	4b0b      	ldr	r3, [pc, #44]	; (8000b58 <USART1_IRQHandler+0x3c>)
 8000b2a:	0018      	movs	r0, r3
 8000b2c:	f7ff faec 	bl	8000108 <strlen>
 8000b30:	0002      	movs	r2, r0
 8000b32:	b2e1      	uxtb	r1, r4
 8000b34:	4b08      	ldr	r3, [pc, #32]	; (8000b58 <USART1_IRQHandler+0x3c>)
 8000b36:	5499      	strb	r1, [r3, r2]
	pUSART->base_addr->USART_RQR |= 1 << 3;
 8000b38:	4b06      	ldr	r3, [pc, #24]	; (8000b54 <USART1_IRQHandler+0x38>)
 8000b3a:	681b      	ldr	r3, [r3, #0]
 8000b3c:	681b      	ldr	r3, [r3, #0]
 8000b3e:	699a      	ldr	r2, [r3, #24]
 8000b40:	4b04      	ldr	r3, [pc, #16]	; (8000b54 <USART1_IRQHandler+0x38>)
 8000b42:	681b      	ldr	r3, [r3, #0]
 8000b44:	681b      	ldr	r3, [r3, #0]
 8000b46:	2108      	movs	r1, #8
 8000b48:	430a      	orrs	r2, r1
 8000b4a:	619a      	str	r2, [r3, #24]
}
 8000b4c:	46c0      	nop			; (mov r8, r8)
 8000b4e:	46bd      	mov	sp, r7
 8000b50:	bdb0      	pop	{r4, r5, r7, pc}
 8000b52:	46c0      	nop			; (mov r8, r8)
 8000b54:	200000fc 	.word	0x200000fc
 8000b58:	2000008c 	.word	0x2000008c

08000b5c <EXTI0_1_IRQHandler>:

void EXTI0_1_IRQHandler()
{
 8000b5c:	b580      	push	{r7, lr}
 8000b5e:	b082      	sub	sp, #8
 8000b60:	af00      	add	r7, sp, #0

	for(int i = 0;i<100000;i++);
 8000b62:	2300      	movs	r3, #0
 8000b64:	607b      	str	r3, [r7, #4]
 8000b66:	e002      	b.n	8000b6e <EXTI0_1_IRQHandler+0x12>
 8000b68:	687b      	ldr	r3, [r7, #4]
 8000b6a:	3301      	adds	r3, #1
 8000b6c:	607b      	str	r3, [r7, #4]
 8000b6e:	687b      	ldr	r3, [r7, #4]
 8000b70:	4a0d      	ldr	r2, [pc, #52]	; (8000ba8 <EXTI0_1_IRQHandler+0x4c>)
 8000b72:	4293      	cmp	r3, r2
 8000b74:	ddf8      	ble.n	8000b68 <EXTI0_1_IRQHandler+0xc>
	EXTI_reg *pREG = EXTI;
 8000b76:	4b0d      	ldr	r3, [pc, #52]	; (8000bac <EXTI0_1_IRQHandler+0x50>)
 8000b78:	603b      	str	r3, [r7, #0]
	pREG->EXTI_PR |= 1<<0;
 8000b7a:	683b      	ldr	r3, [r7, #0]
 8000b7c:	695b      	ldr	r3, [r3, #20]
 8000b7e:	2201      	movs	r2, #1
 8000b80:	431a      	orrs	r2, r3
 8000b82:	683b      	ldr	r3, [r7, #0]
 8000b84:	615a      	str	r2, [r3, #20]
	USART_send(rx_buffer, pUSART);
 8000b86:	4b0a      	ldr	r3, [pc, #40]	; (8000bb0 <EXTI0_1_IRQHandler+0x54>)
 8000b88:	681a      	ldr	r2, [r3, #0]
 8000b8a:	4b0a      	ldr	r3, [pc, #40]	; (8000bb4 <EXTI0_1_IRQHandler+0x58>)
 8000b8c:	0011      	movs	r1, r2
 8000b8e:	0018      	movs	r0, r3
 8000b90:	f7ff fbac 	bl	80002ec <USART_send>
	GPIO_toggle(LED_2);
 8000b94:	4b08      	ldr	r3, [pc, #32]	; (8000bb8 <EXTI0_1_IRQHandler+0x5c>)
 8000b96:	681b      	ldr	r3, [r3, #0]
 8000b98:	0018      	movs	r0, r3
 8000b9a:	f7ff fe7f 	bl	800089c <GPIO_toggle>
}
 8000b9e:	46c0      	nop			; (mov r8, r8)
 8000ba0:	46bd      	mov	sp, r7
 8000ba2:	b002      	add	sp, #8
 8000ba4:	bd80      	pop	{r7, pc}
 8000ba6:	46c0      	nop			; (mov r8, r8)
 8000ba8:	0001869f 	.word	0x0001869f
 8000bac:	40010400 	.word	0x40010400
 8000bb0:	200000fc 	.word	0x200000fc
 8000bb4:	2000008c 	.word	0x2000008c
 8000bb8:	200000f8 	.word	0x200000f8

08000bbc <__libc_init_array>:
 8000bbc:	b570      	push	{r4, r5, r6, lr}
 8000bbe:	2600      	movs	r6, #0
 8000bc0:	4d0c      	ldr	r5, [pc, #48]	; (8000bf4 <__libc_init_array+0x38>)
 8000bc2:	4c0d      	ldr	r4, [pc, #52]	; (8000bf8 <__libc_init_array+0x3c>)
 8000bc4:	1b64      	subs	r4, r4, r5
 8000bc6:	10a4      	asrs	r4, r4, #2
 8000bc8:	42a6      	cmp	r6, r4
 8000bca:	d109      	bne.n	8000be0 <__libc_init_array+0x24>
 8000bcc:	2600      	movs	r6, #0
 8000bce:	f000 f8ad 	bl	8000d2c <_init>
 8000bd2:	4d0a      	ldr	r5, [pc, #40]	; (8000bfc <__libc_init_array+0x40>)
 8000bd4:	4c0a      	ldr	r4, [pc, #40]	; (8000c00 <__libc_init_array+0x44>)
 8000bd6:	1b64      	subs	r4, r4, r5
 8000bd8:	10a4      	asrs	r4, r4, #2
 8000bda:	42a6      	cmp	r6, r4
 8000bdc:	d105      	bne.n	8000bea <__libc_init_array+0x2e>
 8000bde:	bd70      	pop	{r4, r5, r6, pc}
 8000be0:	00b3      	lsls	r3, r6, #2
 8000be2:	58eb      	ldr	r3, [r5, r3]
 8000be4:	4798      	blx	r3
 8000be6:	3601      	adds	r6, #1
 8000be8:	e7ee      	b.n	8000bc8 <__libc_init_array+0xc>
 8000bea:	00b3      	lsls	r3, r6, #2
 8000bec:	58eb      	ldr	r3, [r5, r3]
 8000bee:	4798      	blx	r3
 8000bf0:	3601      	adds	r6, #1
 8000bf2:	e7f2      	b.n	8000bda <__libc_init_array+0x1e>
 8000bf4:	08000d44 	.word	0x08000d44
 8000bf8:	08000d44 	.word	0x08000d44
 8000bfc:	08000d44 	.word	0x08000d44
 8000c00:	08000d48 	.word	0x08000d48

08000c04 <malloc>:
 8000c04:	b510      	push	{r4, lr}
 8000c06:	4b03      	ldr	r3, [pc, #12]	; (8000c14 <malloc+0x10>)
 8000c08:	0001      	movs	r1, r0
 8000c0a:	6818      	ldr	r0, [r3, #0]
 8000c0c:	f000 f80c 	bl	8000c28 <_malloc_r>
 8000c10:	bd10      	pop	{r4, pc}
 8000c12:	46c0      	nop			; (mov r8, r8)
 8000c14:	20000000 	.word	0x20000000

08000c18 <memset>:
 8000c18:	0003      	movs	r3, r0
 8000c1a:	1812      	adds	r2, r2, r0
 8000c1c:	4293      	cmp	r3, r2
 8000c1e:	d100      	bne.n	8000c22 <memset+0xa>
 8000c20:	4770      	bx	lr
 8000c22:	7019      	strb	r1, [r3, #0]
 8000c24:	3301      	adds	r3, #1
 8000c26:	e7f9      	b.n	8000c1c <memset+0x4>

08000c28 <_malloc_r>:
 8000c28:	2303      	movs	r3, #3
 8000c2a:	b570      	push	{r4, r5, r6, lr}
 8000c2c:	1ccd      	adds	r5, r1, #3
 8000c2e:	439d      	bics	r5, r3
 8000c30:	3508      	adds	r5, #8
 8000c32:	0006      	movs	r6, r0
 8000c34:	2d0c      	cmp	r5, #12
 8000c36:	d21e      	bcs.n	8000c76 <_malloc_r+0x4e>
 8000c38:	250c      	movs	r5, #12
 8000c3a:	42a9      	cmp	r1, r5
 8000c3c:	d81d      	bhi.n	8000c7a <_malloc_r+0x52>
 8000c3e:	0030      	movs	r0, r6
 8000c40:	f000 f862 	bl	8000d08 <__malloc_lock>
 8000c44:	4a25      	ldr	r2, [pc, #148]	; (8000cdc <_malloc_r+0xb4>)
 8000c46:	6814      	ldr	r4, [r2, #0]
 8000c48:	0021      	movs	r1, r4
 8000c4a:	2900      	cmp	r1, #0
 8000c4c:	d119      	bne.n	8000c82 <_malloc_r+0x5a>
 8000c4e:	4c24      	ldr	r4, [pc, #144]	; (8000ce0 <_malloc_r+0xb8>)
 8000c50:	6823      	ldr	r3, [r4, #0]
 8000c52:	2b00      	cmp	r3, #0
 8000c54:	d103      	bne.n	8000c5e <_malloc_r+0x36>
 8000c56:	0030      	movs	r0, r6
 8000c58:	f000 f844 	bl	8000ce4 <_sbrk_r>
 8000c5c:	6020      	str	r0, [r4, #0]
 8000c5e:	0029      	movs	r1, r5
 8000c60:	0030      	movs	r0, r6
 8000c62:	f000 f83f 	bl	8000ce4 <_sbrk_r>
 8000c66:	1c43      	adds	r3, r0, #1
 8000c68:	d12b      	bne.n	8000cc2 <_malloc_r+0x9a>
 8000c6a:	230c      	movs	r3, #12
 8000c6c:	0030      	movs	r0, r6
 8000c6e:	6033      	str	r3, [r6, #0]
 8000c70:	f000 f84b 	bl	8000d0a <__malloc_unlock>
 8000c74:	e003      	b.n	8000c7e <_malloc_r+0x56>
 8000c76:	2d00      	cmp	r5, #0
 8000c78:	dadf      	bge.n	8000c3a <_malloc_r+0x12>
 8000c7a:	230c      	movs	r3, #12
 8000c7c:	6033      	str	r3, [r6, #0]
 8000c7e:	2000      	movs	r0, #0
 8000c80:	bd70      	pop	{r4, r5, r6, pc}
 8000c82:	680b      	ldr	r3, [r1, #0]
 8000c84:	1b5b      	subs	r3, r3, r5
 8000c86:	d419      	bmi.n	8000cbc <_malloc_r+0x94>
 8000c88:	2b0b      	cmp	r3, #11
 8000c8a:	d903      	bls.n	8000c94 <_malloc_r+0x6c>
 8000c8c:	600b      	str	r3, [r1, #0]
 8000c8e:	18cc      	adds	r4, r1, r3
 8000c90:	6025      	str	r5, [r4, #0]
 8000c92:	e003      	b.n	8000c9c <_malloc_r+0x74>
 8000c94:	684b      	ldr	r3, [r1, #4]
 8000c96:	428c      	cmp	r4, r1
 8000c98:	d10d      	bne.n	8000cb6 <_malloc_r+0x8e>
 8000c9a:	6013      	str	r3, [r2, #0]
 8000c9c:	0030      	movs	r0, r6
 8000c9e:	f000 f834 	bl	8000d0a <__malloc_unlock>
 8000ca2:	0020      	movs	r0, r4
 8000ca4:	2207      	movs	r2, #7
 8000ca6:	300b      	adds	r0, #11
 8000ca8:	1d23      	adds	r3, r4, #4
 8000caa:	4390      	bics	r0, r2
 8000cac:	1ac3      	subs	r3, r0, r3
 8000cae:	d0e7      	beq.n	8000c80 <_malloc_r+0x58>
 8000cb0:	425a      	negs	r2, r3
 8000cb2:	50e2      	str	r2, [r4, r3]
 8000cb4:	e7e4      	b.n	8000c80 <_malloc_r+0x58>
 8000cb6:	6063      	str	r3, [r4, #4]
 8000cb8:	000c      	movs	r4, r1
 8000cba:	e7ef      	b.n	8000c9c <_malloc_r+0x74>
 8000cbc:	000c      	movs	r4, r1
 8000cbe:	6849      	ldr	r1, [r1, #4]
 8000cc0:	e7c3      	b.n	8000c4a <_malloc_r+0x22>
 8000cc2:	2303      	movs	r3, #3
 8000cc4:	1cc4      	adds	r4, r0, #3
 8000cc6:	439c      	bics	r4, r3
 8000cc8:	42a0      	cmp	r0, r4
 8000cca:	d0e1      	beq.n	8000c90 <_malloc_r+0x68>
 8000ccc:	1a21      	subs	r1, r4, r0
 8000cce:	0030      	movs	r0, r6
 8000cd0:	f000 f808 	bl	8000ce4 <_sbrk_r>
 8000cd4:	1c43      	adds	r3, r0, #1
 8000cd6:	d1db      	bne.n	8000c90 <_malloc_r+0x68>
 8000cd8:	e7c7      	b.n	8000c6a <_malloc_r+0x42>
 8000cda:	46c0      	nop			; (mov r8, r8)
 8000cdc:	20000080 	.word	0x20000080
 8000ce0:	20000084 	.word	0x20000084

08000ce4 <_sbrk_r>:
 8000ce4:	2300      	movs	r3, #0
 8000ce6:	b570      	push	{r4, r5, r6, lr}
 8000ce8:	4c06      	ldr	r4, [pc, #24]	; (8000d04 <_sbrk_r+0x20>)
 8000cea:	0005      	movs	r5, r0
 8000cec:	0008      	movs	r0, r1
 8000cee:	6023      	str	r3, [r4, #0]
 8000cf0:	f000 f80c 	bl	8000d0c <_sbrk>
 8000cf4:	1c43      	adds	r3, r0, #1
 8000cf6:	d103      	bne.n	8000d00 <_sbrk_r+0x1c>
 8000cf8:	6823      	ldr	r3, [r4, #0]
 8000cfa:	2b00      	cmp	r3, #0
 8000cfc:	d000      	beq.n	8000d00 <_sbrk_r+0x1c>
 8000cfe:	602b      	str	r3, [r5, #0]
 8000d00:	bd70      	pop	{r4, r5, r6, pc}
 8000d02:	46c0      	nop			; (mov r8, r8)
 8000d04:	20000100 	.word	0x20000100

08000d08 <__malloc_lock>:
 8000d08:	4770      	bx	lr

08000d0a <__malloc_unlock>:
 8000d0a:	4770      	bx	lr

08000d0c <_sbrk>:
 8000d0c:	4b05      	ldr	r3, [pc, #20]	; (8000d24 <_sbrk+0x18>)
 8000d0e:	0002      	movs	r2, r0
 8000d10:	6819      	ldr	r1, [r3, #0]
 8000d12:	2900      	cmp	r1, #0
 8000d14:	d101      	bne.n	8000d1a <_sbrk+0xe>
 8000d16:	4904      	ldr	r1, [pc, #16]	; (8000d28 <_sbrk+0x1c>)
 8000d18:	6019      	str	r1, [r3, #0]
 8000d1a:	6818      	ldr	r0, [r3, #0]
 8000d1c:	1882      	adds	r2, r0, r2
 8000d1e:	601a      	str	r2, [r3, #0]
 8000d20:	4770      	bx	lr
 8000d22:	46c0      	nop			; (mov r8, r8)
 8000d24:	20000088 	.word	0x20000088
 8000d28:	20000108 	.word	0x20000108

08000d2c <_init>:
 8000d2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d2e:	46c0      	nop			; (mov r8, r8)
 8000d30:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d32:	bc08      	pop	{r3}
 8000d34:	469e      	mov	lr, r3
 8000d36:	4770      	bx	lr

08000d38 <_fini>:
 8000d38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d3a:	46c0      	nop			; (mov r8, r8)
 8000d3c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d3e:	bc08      	pop	{r3}
 8000d40:	469e      	mov	lr, r3
 8000d42:	4770      	bx	lr
